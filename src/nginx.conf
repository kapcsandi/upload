
user  www-data;
worker_processes  2;

pid /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {

  # reserve 1MB under the name 'proxied' to track uploads
  upload_progress proxied 5m;

  include       mime.types;
  default_type  application/octet-stream;

  sendfile        on;
  #tcp_nopush     on;

  keepalive_timeout  65;

  #gzip  on;

  server {
#    listen       80;
    server_name  localhost;

    location / {
      root   /var/www;
      index  index.html index.htm;
    }


  #error_page  404              /404.html;

  # redirect server error pages to the static page /50x.html
  #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
      root   html;
    }
  }

  upstream upload-thin {
    server unix:/var/tmp/upload.0.sock;
    server unix:/var/tmp/upload.1.sock;
  }

  server {
    server_name upload.localhost;
    root /var/www/rackapps/upload;

    upload_max_file_size 50m;
    client_max_body_size 50m;

    location @frontcontroller {
      proxy_pass http://upload-thin;
      proxy_redirect default;
    }

    location = /progress {
      report_uploads proxied;
    }


    location /upload {
      upload_pass_args on;
      upload_pass @frontcontroller;

      upload_store /var/shared/uploads_tmp 1;

    # set permissions on the uploaded files
      upload_store_access user:rw group:rw all:r;

    # Set specified fields in request body
    # this puts the original filename, new path+filename and content type in the$
      upload_set_form_field upload[original_name] "$upload_file_name";
      upload_set_form_field upload[content_type] "$upload_content_type";
      upload_set_form_field upload[filepath] "$upload_tmp_path";

      upload_pass_form_field "^image_id$|^authenticity_token$|^format$|^title$";
      upload_cleanup 400 404 499 500-505;

    # track uploads in the 'proxied' zone
    # uploads expires 30s after they finish.
      track_uploads proxied 30s;
    }

    location ^~ /uploads/  {
      access_log off;
      expires max;
      try_files $uri @frontcontroller;
    }

    location / {
      try_files $uri @frontcontroller;
    }
  }
}
